plugins {
    id 'java'
}

ext {
    elasticsearchVersion = '8.1.3'
    luceneVersion = '9.0.0'
    projectVersion = '8.1.3'
    awsVersion = '1.11.749'

}


repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}

configurations {
    addPackageLibs {
        exclude group: "com.fasterxml.jackson.dataformat", module : "jackson-dataformat-cbor"
        exclude group: "com.fasterxml.jackson.core", module : "jackson-core"
    }
}

dependencies {

    implementation project(':arirang.morph')
    implementation project(':arirang-analyzer-6')

    implementation "org.apache.lucene:lucene-core:${luceneVersion}"
    implementation "org.elasticsearch:elasticsearch:${elasticsearchVersion}"
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.slf4j:slf4j-log4j12:1.7.36'
    implementation 'net.java.dev.jna:jna:5.11.0'

    addPackageLibs "com.amazonaws:aws-java-sdk-core:${awsVersion}"
    addPackageLibs "com.amazonaws:aws-java-sdk-s3:${awsVersion}"

//    addPackageLibs 'software.amazon.awssdk:s3:2.17.209'
    configurations {
        implementation(configurations.addPackageLibs)
    }

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    testImplementation 'com.carrotsearch.randomizedtesting:randomizedtesting-runner:2.7.9'
    testImplementation "org.apache.lucene:lucene-test-framework:${luceneVersion}"
    testImplementation "org.elasticsearch.test:framework:${elasticsearchVersion}"
    testImplementation 'org.codehaus.groovy:groovy-all:3.0.10'
}

group = 'org.elasticsearch'
version = "${projectVersion}"
description = 'elasticsearch-analysis-arirang'
java.sourceCompatibility = JavaVersion.VERSION_11

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    with copySpec {
        from 'src/main/resources'
        include '**/plugin-descriptor.properties'
        filter(ReplaceTokens, tokens: [
                ProjectVersion: projectVersion,
                elasticsearchVersion: elasticsearchVersion
        ])
    }
}

task 'package'(type: Zip, dependsOn: [build]) {

    from(tasks.getByPath(':arirang.morph:jar')) {
        into '.'
    }

    from(tasks.getByPath(':arirang-analyzer-6:jar')) {
        into '.'
    }

    from("$project.buildDir/resources/main/plugin-descriptor.properties") {
        into '.'
    }
    from("$project.buildDir/resources/main/plugin-security.policy") {
        into '.'
    }

    from(jar.outputs.files) {
        into '.'
    }

    from(configurations.addPackageLibs) {
        into '.'
    }

    destinationDir project.buildDir
}

test {
    useJUnitPlatform {
        excludeTags 'exclude-from-build'
    }
}
